generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  name            String?
  password        String
  role            Role            @default(USER)
  isEmailVerified Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  Token           Token[]
  Transacrions    Transaction[]
  BalanceAccount  BalanceAccount?
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

model BalanceAccount {
  id           Int           @id @default(autoincrement())
  balance      Int
  user         User          @relation(fields: [userId], references: [id])
  userId       Int           @unique
  transacrions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id               Int             @id @default(autoincrement())
  amount           Int
  date             DateTime
  category         String
  description      String
  payment_method   PaymentMethod
  type             TransactionType
  user             User            @relation(fields: [userId], references: [id])
  userId           Int
  balanceAccount   BalanceAccount  @relation(fields: [balanceAccountId], references: [id])
  balanceAccountId Int
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

enum PaymentMethod {
  CASH
  BANK_TRANSFER
  CARD
  OTHERS
}

enum TransactionType {
  INCOME
  EXPENSE
}
